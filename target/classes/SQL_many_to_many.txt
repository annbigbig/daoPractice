//就從用戶表開始吧
SELECT ID,UUID,DISPLAY_NAME FROM TB_USER;

//找到每個用戶有加入的群組
SELECT u.ID as USER_ID, u.UUID as USER_UUID, u.DISPLAY_NAME as USER_DISPLAY_NAME, ug.GROUP_ID FROM TB_USER u JOIN JN_USER_GROUP ug ON (u.ID = ug.USER_ID);

//只顯示有加入至少一個群組的人
SELECT u.ID as USER_ID, u.UUID as USER_UUID, u.DISPLAY_NAME as USER_DISPLAY_NAME, ug.GROUP_ID, g.NAME as GROUP_NAME FROM TB_USER u JOIN JN_USER_GROUP ug ON (u.ID = ug.USER_ID)
JOIN TB_GROUP g ON (ug.GROUP_ID = g.ID) ORDER BY u.ID,g.ID ASC;

//所有人都會被顯示， 就算他沒有加入群組也一樣
SELECT u.ID as USER_ID, u.UUID as USER_UUID, u.DISPLAY_NAME as USER_DISPLAY_NAME, ug.GROUP_ID, g.NAME as GROUP_NAME FROM TB_USER u 
LEFT OUTER JOIN JN_USER_GROUP ug ON (u.ID = ug.USER_ID)
LEFT OUTER JOIN TB_GROUP g ON (ug.GROUP_ID = g.ID) ORDER BY u.ID,g.ID ASC;

//用戶-群組，接著把朋友關系也列出
SELECT u.ID as USER_ID, u.UUID as USER_UUID, u.DISPLAY_NAME as USER_DISPLAY_NAME, ug.GROUP_ID, g.NAME as GROUP_NAME, uu.UID_2 as FRIEND_ID FROM TB_USER u 
LEFT OUTER JOIN JN_USER_GROUP ug ON (u.ID = ug.USER_ID)
LEFT OUTER JOIN TB_GROUP g ON (ug.GROUP_ID = g.ID)
LEFT OUTER JOIN JN_USER_USER uu ON (uu.UID_1 = u.ID)
 ORDER BY u.ID,g.ID,uu.UID_1 ASC;

//用戶-群組，接著把朋友細節也列出
SELECT u.ID as USER_ID, u.UUID as USER_UUID, u.DISPLAY_NAME as USER_DISPLAY_NAME, ug.GROUP_ID, g.NAME as GROUP_NAME, uu.UID_2 as FRIEND_ID, u2.UUID as FRIEND_UUID, u2.DISPLAY_NAME as FRIEND_DISPLAY_NAME 
FROM TB_USER u 
LEFT OUTER JOIN JN_USER_GROUP ug ON (u.ID = ug.USER_ID)
LEFT OUTER JOIN TB_GROUP g ON (ug.GROUP_ID = g.ID)
LEFT OUTER JOIN JN_USER_USER uu ON (uu.UID_1 = u.ID)
LEFT OUTER JOIN TB_USER u2 ON (uu.UID_2 = u2.ID)
ORDER BY u.ID,g.ID,uu.UID_2 ASC;

//用戶-群組-朋友，再來要把該用戶發表文章也加入
SELECT u.ID as USER_ID, u.UUID as USER_UUID, u.DISPLAY_NAME as USER_DISPLAY_NAME, ug.GROUP_ID, g.NAME as GROUP_NAME, uu.UID_2 as FRIEND_ID, u2.UUID as FRIEND_UUID, u2.DISPLAY_NAME as FRIEND_DISPLAY_NAME, a.ID as ARTICLE_ID
FROM TB_USER u 
LEFT OUTER JOIN JN_USER_GROUP ug ON (u.ID = ug.USER_ID)
LEFT OUTER JOIN TB_GROUP g ON (ug.GROUP_ID = g.ID)
LEFT OUTER JOIN JN_USER_USER uu ON (uu.UID_1 = u.ID)
LEFT OUTER JOIN TB_USER u2 ON (uu.UID_2 = u2.ID)
LEFT OUTER JOIN TB_ARTICLE a ON (a.USER_ID = u.ID)
ORDER BY u.ID,g.ID,uu.UID_2 ASC;

//用戶-群組-朋友-文章 呼有夠累
SELECT u.ID as USER_ID, u.UUID as USER_UUID, u.DISPLAY_NAME as USER_DISPLAY_NAME, ug.GROUP_ID, g.NAME as GROUP_NAME, uu.UID_2 as FRIEND_ID, u2.UUID as FRIEND_UUID, u2.DISPLAY_NAME as FRIEND_DISPLAY_NAME, a.ID as ARTICLE_ID, a.CONTENT as ARTICLE_CONTENT
FROM TB_USER u 
LEFT OUTER JOIN JN_USER_GROUP ug ON (u.ID = ug.USER_ID)
LEFT OUTER JOIN TB_GROUP g ON (ug.GROUP_ID = g.ID)
LEFT OUTER JOIN JN_USER_USER uu ON (uu.UID_1 = u.ID)
LEFT OUTER JOIN TB_USER u2 ON (uu.UID_2 = u2.ID)
LEFT OUTER JOIN TB_ARTICLE a ON (a.USER_ID = u.ID)
ORDER BY u.ID,g.ID,uu.UID_2,a.ID ASC;

//用戶-群組-朋友-文章 每個表的每個欄位都抓
SELECT 
u.ID, u.UUID, u.PASSWD, u.FIRST_NAME, u.LAST_NAME, u.DISPLAY_NAME, u.MALE, u.BIRTHDAY, u.ADDRESS, u.PHONE, u.MOBILE, u.SCORE,
ug.GROUP_ID, g.NAME as GROUP_NAME,
uu.UID_2 as FRIEND_ID, u2.UUID as FRIEND_UUID, u2.FIRST_NAME as FRIEND_FIRST_NAME, u2.LAST_NAME as FRIEND_LAST_NAME, u2.DISPLAY_NAME as FRIEND_DISPLAY_NAME,
u2.MALE as FRIEND_MALE, u2.BIRTHDAY as FRIEND_BIRTHDAY, u2.ADDRESS as FRIEND_ADDRESS, u2.PHONE AS FRIEND_PHONE, u2.MOBILE as FRIEND_MOBILE, u2.SCORE as FRIEND_SCORE, 
a.ID as ARTICLE_ID, a.SUBJECT as ARTICLE_SUBJECT, a.CONTENT as ARTICLE_CONTENT, a.CREATED_TIME as ARTICLE_CREATED_TIME, a.LAST_MODIFIED as ARTICLE_LAST_MODIFIED, a.CATEGORY_ID as ARTICLE_CATEGORY_ID
FROM TB_USER u 
LEFT OUTER JOIN JN_USER_GROUP ug ON (u.ID = ug.USER_ID)
LEFT OUTER JOIN TB_GROUP g ON (ug.GROUP_ID = g.ID)
LEFT OUTER JOIN JN_USER_USER uu ON (uu.UID_1 = u.ID)
LEFT OUTER JOIN TB_USER u2 ON (uu.UID_2 = u2.ID)
LEFT OUTER JOIN TB_ARTICLE a ON (a.USER_ID = u.ID)
ORDER BY u.ID,ug.GROUP_ID,uu.UID_2,a.ID ASC;

//用戶-群組-朋友-文章 每個表的每個欄位都抓，但只取出用戶1的資料
SELECT 
u.ID, u.UUID, u.PASSWD, u.FIRST_NAME, u.LAST_NAME, u.DISPLAY_NAME, u.MALE, u.BIRTHDAY, u.ADDRESS, u.PHONE, u.MOBILE, u.SCORE,
ug.GROUP_ID, g.NAME as GROUP_NAME,
uu.UID_2 as FRIEND_ID, u2.UUID as FRIEND_UUID, u2.FIRST_NAME as FRIEND_FIRST_NAME, u2.LAST_NAME as FRIEND_LAST_NAME, u2.DISPLAY_NAME as FRIEND_DISPLAY_NAME,
u2.MALE as FRIEND_MALE, u2.BIRTHDAY as FRIEND_BIRTHDAY, u2.ADDRESS as FRIEND_ADDRESS, u2.PHONE AS FRIEND_PHONE, u2.MOBILE as FRIEND_MOBILE, u2.SCORE as FRIEND_SCORE, 
a.ID as ARTICLE_ID, a.SUBJECT as ARTICLE_SUBJECT, a.CONTENT as ARTICLE_CONTENT, a.CREATED_TIME as ARTICLE_CREATED_TIME, a.LAST_MODIFIED as ARTICLE_LAST_MODIFIED, a.CATEGORY_ID as ARTICLE_CATEGORY_ID
FROM TB_USER u 
LEFT OUTER JOIN JN_USER_GROUP ug ON (u.ID = ug.USER_ID)
LEFT OUTER JOIN TB_GROUP g ON (ug.GROUP_ID = g.ID)
LEFT OUTER JOIN JN_USER_USER uu ON (uu.UID_1 = u.ID)
LEFT OUTER JOIN TB_USER u2 ON (uu.UID_2 = u2.ID)
LEFT OUTER JOIN TB_ARTICLE a ON (a.USER_ID = u.ID)
WHERE u.ID=1
ORDER BY u.ID,ug.GROUP_ID,uu.UID_2,a.ID ASC;

//用戶-群組-朋友-文章 每個表的每個欄位都抓，修正一下讓它更好，除了連接時盡量不使用連接表的欄位
SELECT 
u.ID, u.UUID, u.PASSWD, u.FIRST_NAME, u.LAST_NAME, u.DISPLAY_NAME, u.MALE, u.BIRTHDAY, u.ADDRESS, u.PHONE, u.MOBILE, u.SCORE,
g.ID as GROUP_ID, g.NAME as GROUP_NAME,
u2.ID as FRIEND_ID, u2.UUID as FRIEND_UUID, u2.FIRST_NAME as FRIEND_FIRST_NAME, u2.LAST_NAME as FRIEND_LAST_NAME, u2.DISPLAY_NAME as FRIEND_DISPLAY_NAME,
u2.MALE as FRIEND_MALE, u2.BIRTHDAY as FRIEND_BIRTHDAY, u2.ADDRESS as FRIEND_ADDRESS, u2.PHONE AS FRIEND_PHONE, u2.MOBILE as FRIEND_MOBILE, u2.SCORE as FRIEND_SCORE, 
a.ID as ARTICLE_ID, a.SUBJECT as ARTICLE_SUBJECT, a.CONTENT as ARTICLE_CONTENT, a.CREATED_TIME as ARTICLE_CREATED_TIME, a.LAST_MODIFIED as ARTICLE_LAST_MODIFIED, a.CATEGORY_ID as ARTICLE_CATEGORY_ID
FROM TB_USER u 
LEFT OUTER JOIN JN_USER_GROUP ug ON (u.ID = ug.USER_ID)
LEFT OUTER JOIN TB_GROUP g ON (ug.GROUP_ID = g.ID)
LEFT OUTER JOIN JN_USER_USER uu ON (uu.UID_1 = u.ID)
LEFT OUTER JOIN TB_USER u2 ON (uu.UID_2 = u2.ID)
LEFT OUTER JOIN TB_ARTICLE a ON (a.USER_ID = u.ID)
WHERE u.ID=1
ORDER BY u.ID, g.ID, u2.ID, a.ID ASC;

//用戶-群組-朋友-文章-分類 （太變態了你到底要連接幾個表啦）
SELECT 
u.ID, u.UUID, u.PASSWD, u.FIRST_NAME, u.LAST_NAME, u.DISPLAY_NAME, u.MALE, u.BIRTHDAY, u.ADDRESS, u.PHONE, u.MOBILE, u.SCORE,
g.ID as GROUP_ID, g.NAME as GROUP_NAME,
u2.ID as FRIEND_ID, u2.UUID as FRIEND_UUID, u2.FIRST_NAME as FRIEND_FIRST_NAME, u2.LAST_NAME as FRIEND_LAST_NAME, u2.DISPLAY_NAME as FRIEND_DISPLAY_NAME,
u2.MALE as FRIEND_MALE, u2.BIRTHDAY as FRIEND_BIRTHDAY, u2.ADDRESS as FRIEND_ADDRESS, u2.PHONE AS FRIEND_PHONE, u2.MOBILE as FRIEND_MOBILE, u2.SCORE as FRIEND_SCORE, 
a.ID as ARTICLE_ID, a.SUBJECT as ARTICLE_SUBJECT, a.CONTENT as ARTICLE_CONTENT, a.CREATED_TIME as ARTICLE_CREATED_TIME, a.LAST_MODIFIED as ARTICLE_LAST_MODIFIED, 
c.ID as CATEGORY_ID, c.NAME as CATEGORY_NAME, c.PID as CATEGORY_PID
FROM TB_USER u 
LEFT OUTER JOIN JN_USER_GROUP ug ON (u.ID = ug.USER_ID)
LEFT OUTER JOIN TB_GROUP g ON (ug.GROUP_ID = g.ID)
LEFT OUTER JOIN JN_USER_USER uu ON (u.ID = uu.UID_1)
LEFT OUTER JOIN TB_USER u2 ON (uu.UID_2 = u2.ID)
LEFT OUTER JOIN TB_ARTICLE a ON (u.ID = a.USER_ID)
LEFT OUTER JOIN TB_CATEGORY c ON (a.CATEGORY_ID = c.ID)
WHERE u.ID=1
ORDER BY u.ID, g.ID, u2.ID, a.ID ASC;

